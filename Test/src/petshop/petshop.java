/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package petshop;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Khrishawn
 */
public class petshop extends javax.swing.JFrame {

    /**
     * Creates new form HomeScreen
     */
    public petshop() {
        initComponents();
    }
    public float getSum(){
     int rowsCount = ResultsTable.getRowCount();
 
 
        float sum = 0;
        for(int i = 0; i < rowsCount; i++){
            sum = sum+Float.parseFloat(ResultsTable.getValueAt(i, 2).toString());
        }
        return sum;
 }
 





//Filter data
    private void filter (String query)
    {
    TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>();
    ResultsTable.setRowSorter(tr);
    tr.setRowFilter(RowFilter.regexFilter(query));
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Scroll1 = new javax.swing.JScrollPane();
        ResultsTable = new javax.swing.JTable();
        GivenLbl = new javax.swing.JLabel();
        PriceLbl = new javax.swing.JLabel();
        AnimalLbl = new javax.swing.JLabel();
        SexLbl = new javax.swing.JLabel();
        ColourLbl = new javax.swing.JLabel();
        GivenBox = new javax.swing.JTextField();
        PriceBox = new javax.swing.JTextField();
        AnimalBox = new javax.swing.JComboBox<>();
        SexBox = new javax.swing.JComboBox<>();
        ColourBox = new javax.swing.JComboBox<>();
        TitleLbl = new javax.swing.JLabel();
        AddBtn = new javax.swing.JButton();
        CalculateBtn = new javax.swing.JButton();
        ImportBtn = new javax.swing.JButton();
        ExportBtn = new javax.swing.JButton();
        ArrivalBox = new javax.swing.JTextField();
        ArrivalLbl = new javax.swing.JLabel();
        UpdateBtn = new javax.swing.JButton();
        SellingLbl = new javax.swing.JLabel();
        SellBox = new javax.swing.JTextField();
        SoldBtn = new javax.swing.JButton();
        InfoLbl = new javax.swing.JLabel();
        SearchLbl = new javax.swing.JLabel();
        SearchBox = new javax.swing.JTextField();
        CalculateBox = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));

        ResultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Given Name", "Animal Type", "Price", "Sex", "Colour", "Arrival Date", "Selling Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Scroll1.setViewportView(ResultsTable);

        GivenLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        GivenLbl.setText("Given Name");

        PriceLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        PriceLbl.setText("Price");

        AnimalLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        AnimalLbl.setText("Animal Type");

        SexLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SexLbl.setText("Sex");

        ColourLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ColourLbl.setText("Colour");

        GivenBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        GivenBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GivenBoxActionPerformed(evt);
            }
        });

        PriceBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        PriceBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceBoxActionPerformed(evt);
            }
        });

        AnimalBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        AnimalBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dog", "Cat", "Golden Hamster", "Roborovski Hamster", "Guinea Pig", "Edwards's Fig Parrot", "Norwegian Blue", "Hyacinth Macaw", "Yellow Canary", "Goldfish", "Koi", "Common Barbell", "Boa Constrictor", "Corn Snake", "Black-necked Spitting Cobra" }));
        AnimalBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnimalBoxActionPerformed(evt);
            }
        });

        SexBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SexBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Hermaphrodites" }));
        SexBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SexBoxActionPerformed(evt);
            }
        });

        ColourBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ColourBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Red", "Orange", "Yellow", "Green", "Cyan", "Blue ", "Indigo ", "Violet ", "Purple ", "Magenta ", "Pink ", "Brown ", "White ", "Gray ", "Black" }));
        ColourBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ColourBoxActionPerformed(evt);
            }
        });

        TitleLbl.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        TitleLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleLbl.setText("Welcome to Khrishawn's Pet Shop Admin tool");

        AddBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        AddBtn.setText("Add Animal");
        AddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtnActionPerformed(evt);
            }
        });

        CalculateBtn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        CalculateBtn.setText("Calculate");
        CalculateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculateBtnActionPerformed(evt);
            }
        });

        ImportBtn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        ImportBtn.setText("Import");
        ImportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportBtnActionPerformed(evt);
            }
        });

        ExportBtn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        ExportBtn.setText("Export");
        ExportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportBtnActionPerformed(evt);
            }
        });

        ArrivalBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ArrivalBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArrivalBoxActionPerformed(evt);
            }
        });

        ArrivalLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ArrivalLbl.setText("Arrival Date(YYYY-MM-DD)");

        UpdateBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        UpdateBtn.setText("Update Animal Info");
        UpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBtnActionPerformed(evt);
            }
        });

        SellingLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SellingLbl.setText("Selling Date(YYYY-MM-DD)");

        SellBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SellBox.setText("N/A");
        SellBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SellBoxActionPerformed(evt);
            }
        });

        SoldBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SoldBtn.setText("Sold ");
        SoldBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SoldBtnActionPerformed(evt);
            }
        });

        InfoLbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        InfoLbl.setText("ANIMAL INFO");

        SearchLbl.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        SearchLbl.setText("Search ");

        SearchBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SearchBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBoxActionPerformed(evt);
            }
        });
        SearchBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchBoxKeyReleased(evt);
            }
        });

        CalculateBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculateBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitleLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(CalculateBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CalculateBox, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(393, 393, 393)
                .addComponent(ImportBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ExportBtn)
                .addGap(289, 289, 289))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(633, 633, 633)
                        .addComponent(SearchLbl)
                        .addGap(56, 56, 56)
                        .addComponent(SearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(GivenLbl)
                                            .addComponent(AnimalLbl))
                                        .addGap(125, 125, 125))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ColourLbl)
                                            .addComponent(ArrivalLbl)
                                            .addComponent(SellingLbl)
                                            .addComponent(SexLbl)
                                            .addComponent(PriceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(17, 17, 17)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SellBox, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(ArrivalBox)
                                        .addComponent(ColourBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(SexBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(AnimalBox, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PriceBox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(GivenBox, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(136, 136, 136)
                                .addComponent(InfoLbl))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(UpdateBtn)
                                        .addGap(45, 45, 45)
                                        .addComponent(AddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(SoldBtn)
                                        .addGap(151, 151, 151)))))
                        .addGap(40, 40, 40)
                        .addComponent(Scroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 982, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(273, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitleLbl)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(InfoLbl)
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(GivenLbl)
                            .addComponent(GivenBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AnimalLbl)
                            .addComponent(AnimalBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PriceLbl)
                            .addComponent(PriceBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SexLbl)
                            .addComponent(SexBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ColourLbl)
                            .addComponent(ColourBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ArrivalLbl)
                            .addComponent(ArrivalBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SellingLbl)
                            .addComponent(SellBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UpdateBtn)
                            .addComponent(AddBtn))
                        .addGap(18, 18, 18)
                        .addComponent(SoldBtn)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ImportBtn)
                                    .addComponent(ExportBtn))
                                .addGap(55, 55, 55))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(CalculateBox)
                                    .addComponent(CalculateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(52, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Scroll1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SearchLbl)
                            .addComponent(SearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(127, 127, 127))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ColourBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColourBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ColourBoxActionPerformed

    private void PriceBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PriceBoxActionPerformed

    private void AddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtnActionPerformed
 String user=GivenBox.getText();// It return empty String ""          // even no data is entered.
 String Price1=PriceBox.getText();

  if (user.isEmpty()){
     JOptionPane.showMessageDialog(null,"Please Enter Given Name"); 
  }
  if (Price1.isEmpty()){
     JOptionPane.showMessageDialog(null,"Please Enter Price"); 
  }

  else{
        if (ArrivalBox.getText().equals("")){
  Date date = new Date();
  DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
  ArrivalBox.setText(dateFormat.format(date));
  }
        DefaultTableModel model = (DefaultTableModel)ResultsTable.getModel();

         // insert row to the model from jtextfields using addRow method
        model.addRow(new Object[]{GivenBox.getText(),
                                  AnimalBox.getSelectedItem(),PriceBox.getText(), SexBox.getSelectedItem(),ColourBox.getSelectedItem(),ArrivalBox.getText(),SellBox.getText() });
  }
    }//GEN-LAST:event_AddBtnActionPerformed

    private void SexBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SexBoxActionPerformed
	// TODO add your handling code here:
    }//GEN-LAST:event_SexBoxActionPerformed

    private void ExportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportBtnActionPerformed
 

        
        JFileChooser fileChooser = new JFileChooser();
    fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")+ System.getProperty("file.seperator")+"Documents"));
    int result = fileChooser.showOpenDialog(this);
    if(result== JFileChooser.APPROVE_OPTION){
        File selectedFile = fileChooser.getSelectedFile();
    
      
        try {
            FileWriter fw = new FileWriter(selectedFile);
            BufferedWriter bw = new BufferedWriter(fw);
            
            for(int i = 0; i < ResultsTable.getRowCount(); i++){//rows
                for(int j = 0; j < ResultsTable.getColumnCount(); j++){//columns
                    bw.write(ResultsTable.getValueAt(i, j).toString()+",");
                }
                bw.newLine();
            }
            
            bw.close();
            fw.close();
            
        } catch (IOException ex) {
            Logger.getLogger(petshop.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
                            
  
    }//GEN-LAST:event_ExportBtnActionPerformed

    private void ImportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportBtnActionPerformed

        JFileChooser fileChooser = new JFileChooser();
    fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")+ System.getProperty("file.seperator")+"Documents"));
    int result = fileChooser.showOpenDialog(this);
    if(result== JFileChooser.APPROVE_OPTION){
        File selectedFile = fileChooser.getSelectedFile();
        
        try {
            FileReader fr = new FileReader(selectedFile);
            BufferedReader br = new BufferedReader(fr);
            
            DefaultTableModel model = (DefaultTableModel)ResultsTable.getModel();
            Object[] lines = br.lines().toArray();
            
        for (int i = 0; i< lines.length;i++){
            String[] row = lines[i].toString().split(",");
            model.addRow(row);
        }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(JTable_import_and_export_to_text_file.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     for(int K = 0; K < ResultsTable.getRowCount(); K++){
            if(ResultsTable.getModel().getValueAt(K, 6) == null){
                String N = "N/A";
                ResultsTable.getModel().setValueAt(N, K, 6);
            }}   
     
    }//GEN-LAST:event_ImportBtnActionPerformed

    private void GivenBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GivenBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GivenBoxActionPerformed

    private void ArrivalBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArrivalBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ArrivalBoxActionPerformed

    private void UpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBtnActionPerformed
        // button update selected row
                                           
        
        DefaultTableModel model = (DefaultTableModel)ResultsTable.getModel();
        
// get selected row index
        int selectedRowIndex = ResultsTable.getSelectedRow();
        
// get selected row data 
        String Gname = model.getValueAt(selectedRowIndex, 0).toString();
        String Atype = model.getValueAt(selectedRowIndex, 1).toString();
        String Price = model.getValueAt(selectedRowIndex, 2).toString();
         String Sex = model.getValueAt(selectedRowIndex, 3).toString();
        String Colour = model.getValueAt(selectedRowIndex, 4).toString();
          String Sold = model.getValueAt(selectedRowIndex, 5).toString();
            String Avail = model.getValueAt(selectedRowIndex, 6).toString();

 // get the entered data         
        String NewG = JOptionPane.showInputDialog(null,"Enter The New Name",Gname);
        String NewT = JOptionPane.showInputDialog(null,"Enter The New Animal Type",Atype);
        String NewP = JOptionPane.showInputDialog(null,"Enter The New Price",Price);
        String NewSex = JOptionPane.showInputDialog(null,"Enter The New Sex",Sex);
        String NewC = JOptionPane.showInputDialog(null,"Enter The New Colour",Colour);
        String NewS = JOptionPane.showInputDialog(null,"Enter The New Sold Date",Sold);
        String NewA = JOptionPane.showInputDialog(null,"Enter The New Availability",Avail);
// set the new data into jtable row
        model.setValueAt(NewG, selectedRowIndex, 0);
        model.setValueAt(NewT, selectedRowIndex, 1);
        model.setValueAt(NewP, selectedRowIndex, 2);
        model.setValueAt(NewSex, selectedRowIndex,3);
        model.setValueAt(NewC, selectedRowIndex, 4);
        model.setValueAt(NewS, selectedRowIndex, 5);
          model.setValueAt(NewA, selectedRowIndex, 6);            
         
    }//GEN-LAST:event_UpdateBtnActionPerformed

    private void SellBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SellBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SellBoxActionPerformed

    private void SoldBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SoldBtnActionPerformed
      int YesOrNo = JOptionPane.showConfirmDialog(null,"Are You Sure Pet Is Sold?","Sell Pet", JOptionPane.YES_NO_OPTION);
        if(YesOrNo == 0)
        {
            GivenBox.setText("Yes");
        }else{
            GivenBox.setText("No");   
        }
        
                
        int i = ResultsTable.getSelectedRow();
      DefaultTableModel model = (DefaultTableModel)ResultsTable.getModel();
      Date date = new Date();
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    model.setValueAt(dateFormat.format(date),i,6);
    }//GEN-LAST:event_SoldBtnActionPerformed

    private void CalculateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalculateBtnActionPerformed
CalculateBox.setText(Float.toString(getSum()));

    }//GEN-LAST:event_CalculateBtnActionPerformed

    private void AnimalBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnimalBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AnimalBoxActionPerformed

    private void SearchBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchBoxActionPerformed

    private void SearchBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchBoxKeyReleased
   DefaultTableModel table = (DefaultTableModel)ResultsTable.getModel();
 String search = SearchBox.getText();
 
 TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
 ResultsTable.setRowSorter(tr);
 tr.setRowFilter(RowFilter.regexFilter( search) );

    }//GEN-LAST:event_SearchBoxKeyReleased

    private void CalculateBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalculateBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CalculateBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(petshop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(petshop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(petshop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(petshop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new petshop().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JComboBox<String> AnimalBox;
    private javax.swing.JLabel AnimalLbl;
    private javax.swing.JTextField ArrivalBox;
    private javax.swing.JLabel ArrivalLbl;
    private javax.swing.JTextField CalculateBox;
    private javax.swing.JButton CalculateBtn;
    private javax.swing.JComboBox<String> ColourBox;
    private javax.swing.JLabel ColourLbl;
    private javax.swing.JButton ExportBtn;
    private javax.swing.JTextField GivenBox;
    private javax.swing.JLabel GivenLbl;
    private javax.swing.JButton ImportBtn;
    private javax.swing.JLabel InfoLbl;
    private javax.swing.JTextField PriceBox;
    private javax.swing.JLabel PriceLbl;
    private javax.swing.JTable ResultsTable;
    private javax.swing.JScrollPane Scroll1;
    private javax.swing.JTextField SearchBox;
    private javax.swing.JLabel SearchLbl;
    private javax.swing.JTextField SellBox;
    private javax.swing.JLabel SellingLbl;
    private javax.swing.JComboBox<String> SexBox;
    private javax.swing.JLabel SexLbl;
    private javax.swing.JButton SoldBtn;
    private javax.swing.JLabel TitleLbl;
    private javax.swing.JButton UpdateBtn;
    // End of variables declaration//GEN-END:variables

    private static class JTable_import_and_export_to_text_file {

        public JTable_import_and_export_to_text_file() {
        }
    }

   
}
